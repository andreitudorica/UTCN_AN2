DATA SEGMENT PARA PUBLIC 'DATA'
BUFFERSIZE DB 51 ; 50 CHAR + RETURN
INPUTLENGTH DB 0 ;ACTUAL INPUT ,NR OF READ CHARS
BUFFER DB 51 DUP(0); ACTUAL BUFFER
MESAJ1 DB "WAS FOUND","$"
MESAJ2 DB "WAS NOT FOUND","$"
TEST1 DB "test","$"
TEST2 DB 5 DUP (?)
COUNT DW ?
DATA ENDS
CODE SEGMENT PARA PUBLIC 'CODE'
ASSUME CS:CODE, DS:DATA

START PROC FAR
 PUSH DS
 XOR AX,AX
 PUSH AX
 MOV AX,DATA
 MOV DS,AX
 
 LEA DX, BUFFERSIZE
 MOV AH,0AH
 INT 21H
 XOR SI,SI
 MOV AL,BUFFER[0]
 SUB INPUTLENGTH , 3
 CMP INPUTLENGTH , 0
 JS DONE
 DO:
	XOR AX,AX
	MOV AL,INPUTLENGTH
	CMP SI,AX
	JE DONE
	
	MOV AL, BUFFER[SI]
	MOV TEST2[0] , AL
	INC SI
	MOV AL , BUFFER[SI]
	MOV TEST2[1] , AL
	INC SI
	MOV AL , BUFFER[SI]
	MOV TEST2[2] , AL
	INC SI
	MOV AL , BUFFER[SI]
	MOV TEST2[3] ,AL
	MOV TEST2[4]  , '$'
	DEC SI
	DEC SI
	JMP COMP
DO2:
	JMP DO
COMP:
	MOV AL , TEST2[0]
	MOV BL , TEST1[0]
	CMP AL,BL
	JNE DO2
	MOV AL , TEST2[1]
	MOV BL , TEST1[1]
	CMP AL,BL
	JNE DO2
	MOV AL , TEST2[2]
	MOV BL, TEST1[2]
	CMP AL,BL
	JNE DO2
	MOV AL , TEST2[3]
	MOV BL , TEST1[3]
	CMP AL,BL
	JNE DO2
FOUND:
	LEA DX, MESAJ1
	JMP PRINT
DONE :
	LEA DX, MESAJ2
PRINT:
	MOV AH,09H
	INT 21H
	



	
 

;OTHER PROGRAM INSTRUCTIONS
RET
START ENDP
CODE ENDS
END START