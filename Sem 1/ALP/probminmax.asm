
;------------------------------------------------------------ COPY FROM HERE
DATA SEGMENT PARA PUBLIC 'DATA'
SIR1 DB 21,32,54,32,69
LONG1 DW $-SIR1;5
SIR2 DB 02,43,66,12,04
LONG2 DW $-SIR2;7
TEN DW 10
CONT DW 0
ENTER1 DB 13,10,"$";
DATA ENDS

CODE SEGMENT PARA PUBLIC 'CODE'
ASSUME CS:CODE, DS:DATA

PrintNumber proc
DIVIDE:
	XOR DX,DX
	DIV TEN; RESTUL RAMANE IN DX
	PUSH DX
	INC CONT
	CMP AX,0
	JNE DIVIDE
MOV AH,02H
PRINT:
	POP DX
	ADD DL,48
	INT 21H
	DEC CONT
	CMP CONT,0
	JNE PRINT
ret
PrintNumber endp

START PROC FAR
 PUSH DS
 XOR AX,AX
 PUSH AX
 MOV AX,DATA
 MOV DS,AX ;14


XOR AX,AX
MOV AL, SIR1[0];30

XOR SI,SI
DEC LONG1
DEC LONG2

FIRST_MAX:
	CMP SI,LONG1
	JE NEXT1
	INC SI
	CMP AL , SIR1[SI]
	JG FIRST_MAX
	MOV AL, SIR1[SI]
	JMP FIRST_MAX
NEXT1:	
	CALL PrintNumber

MOV AH,09h
LEA DX,ENTER1
INT 21h

XOR DX,DX
XOR SI,SI
XOR AX,AX
MOV AL,SIR2[0]
MOV CONT,0

SECOND_MAX:
	CMP SI,LONG2
	JE NEXT2
	INC SI
	CMP AL , SIR2[SI]
	JG SECOND_MAX
	MOV AL, SIR2[SI]
	JMP SECOND_MAX
NEXT2:	
	CALL PrintNumber

MOV AH,09H
LEA DX,ENTER1
INT 21H

XOR DX,DX
XOR SI,SI
XOR AX,AX
MOV AL,SIR1[0]
MOV CONT,0

FIRST_MIN:
	CMP SI,LONG1
	JE NEXTT1
	INC SI
	CMP AL , SIR1[SI]
	JS FIRST_MIN
	MOV AL , SIR1[SI]
	JMP FIRST_MIN
NEXTT1:
	CALL PrintNumber
MOV AH,09H
LEA DX,ENTER1
INT 21H

XOR DX,DX
XOR SI,SI
XOR AX,AX
MOV AL,SIR2[0]
MOV CONT,0

SECOND_MIN:
	CMP SI,LONG2
	JE NEXTT2
	INC SI
	CMP AL , SIR2[SI]
	JS SECOND_MIN
	MOV AL , SIR2[SI]
	JMP SECOND_MIN
NEXTT2:
	CALL PrintNumber





;OTHER PROGRAM INSTRUCTIONS
RET
START ENDP
CODE ENDS
END START